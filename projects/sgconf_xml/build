#!/bin/sh

#   $Author: nobunaga $
#   $Revision: 1.2 $
#   $Date: 2008/01/05 12:11:02 $
######################################################

OS=unknown
sys=`uname -s`
release=`uname -r | cut -b1`
BUILD_DIR=`pwd`
CONFFILE="../../Makefile.conf"
PREFIX="/"
BIN_MODE=0755
DATA_MODE=0644
DIR_MODE=0755
OWNER=root

if [ "$1" = "debug" ]
then
   DEFS="$DEFS -DDEBUG"
   MAKEOPTS="$MAKEOPTS -j1"
   CXXFLAGS="$CXXFLAGS -ggdb3 -W -Wall -Wextra"
   DEBUG="yes"
else
   DEFS="$DEFS -DNDEBUG"
   DEBUG="no"
fi

CXXFLAGS="$CXXFLAGS -I/usr/local/include"
LDFLAGS="$LDFLAGS -L/usr/local/lib"

if [ "$sys" = "Linux" ]
then
    OS=linux
    release=""
    MAKE="make"
fi

if [ "$sys" = "FreeBSD" ]
then
    case $release in
        4) OS=bsd;;
        5) OS=bsd5;;
        6) OS=bsd5;;	
        7) OS=bsd7;;
        8) OS=bsd7;;
        9) OS=bsd7;;
        *) OS=unknown;;
    esac
    MAKE="gmake"
fi

if [ "$OS" = "unknown" ]
then 
    printf "#############################################################################\n"
    printf "# Sorry, but sgconf currently supported by Linux, FreeBSD 4.x, 5.x, 6.x  #\n"
    printf "#############################################################################\n"
    exit 1
fi

printf "#############################################################################\n"
printf "       Building sgconf for $sys $release\n"
printf "#############################################################################\n"

STG_LIBS="conffiles.lib
	  crypto.lib 
	  common.lib 
	  srvconf.lib"

if [ "$OS" = "linux" ]
then
    DEFS="$DEFS -DLINUX"
    LIB_THREAD=-lpthread
else
    if [ "$OS" = "bsd" ]
    then
        DEFS="$DEFS -DFREE_BSD"
    else
        DEFS="$DEFS -DFREE_BSD5"
        if [ "$OS" = "bsd7" ]
        then
            LIB_THREAD=-lpthread
        else
            LIB_THREAD=-lc_r
        fi
    fi
fi

if [ -z "$CC" ]
then
    CC=gcc
fi

if [ -z "$CXX" ]
then
    CXX=g++
fi

printf "Checking CC... "
$CC --version > /dev/null 2> /dev/null
if [ $? != 0 ]
then
    printf "FAIL!\n"
    printf "$CC not found\n"
    exit;
fi
printf "found\n"
printf "Checking CXX... "
$CXX --version > /dev/null 2> /dev/null
if [ $? != 0 ]
then
    printf "FAIL!\n"
    printf "$CXX not found\n"
    exit;
fi
printf "found\n"

printf "Checking endianess... "
printf "int main() { int probe = 0x00000001; return *(char *)&probe; }\n" > build_check.c
$CC $CFLAGS $LDFLAGS build_check.c -o fake > /dev/null 2> /dev/null
if [ $? != 0 ]
then
    printf "FAIL!\n"
    printf "Endianess checking failed\n"
    exit;
else
    ./fake
    if [ $? = 1 ]
    then
        ARCH=le
        CXXFLAGS="$CXXFLAGS -DARCH_LE"
        CFLAGS="$CFLAGS -DARCH_LE"
        printf "Little Endian\n"
    else
        ARCH=be
        CXXFLAGS="$CXXFLAGS -DARCH_BE"
        CFLAGS="$CFLAGS -DARCH_BE"
        printf "Big Endian\n"
    fi
fi
rm -f fake

printf "Checking for -lexpat... "
printf "int main() { return 0; }\n" > build_check.c
$CC $CXXFLAGS $LDFLAGS build_check.c -lexpat -o fake > /dev/null 2> /dev/null
if [ $? != 0 ]
then
    CHECK_EXPAT=no
    printf "no\n"
else
    CHECK_EXPAT=yes
    printf "yes\n"
fi
rm -f fake
rm -f build_check.c

if [ "$CHECK_EXPAT" != "yes" ]
then
    printf "-lexpat not found!\n"
    exit 1
fi

printf "OS=$OS\n" > $CONFFILE
printf "STG_TIME=yes\n" >> $CONFFILE
printf "DEBUG=$DEBUG\n" >> $CONFFILE
printf "DIR_BUILD=$BUILD_DIR\n" >> $CONFFILE
printf "DIR_LIB=\$(DIR_BUILD)/../../lib\n" >> $CONFFILE
printf "DIR_LIBSRC=\$(DIR_BUILD)/../../stglibs\n" >> $CONFFILE
printf "DIR_INCLUDE=\$(DIR_BUILD)/../../include\n" >> $CONFFILE
printf "ARCH=$ARCH\n" >> $CONFFILE
printf "CHECK_EXPAT=$CHECK_EXPAT\n" >> $CONFFILE
printf "DEFS=$DEFS\n" >> $CONFFILE
printf "STG_LIBS=" >> $CONFFILE
for lib in $STG_LIBS
do
    printf "$lib " >> $CONFFILE
done
printf "\n" >> $CONFFILE
printf "LIB_THREAD=$LIB_THREAD\n" >> $CONFFILE
printf "CXXFLAGS=$CXXFLAGS\n" >> $CONFFILE
printf "CFLAGS=$CFLAGS\n" >> $CONFFILE
printf "LDFLAGS=$LDFLAGS\n" >> $CONFFILE
printf "PREFIX=$PREFIX\n" >> $CONFFILE
printf "BIN_MODE=$BIN_MODE\n" >> $CONFFILE
printf "DATA_MODE=$DATA_MODE\n" >> $CONFFILE
printf "DIR_MODE=$DIR_MODE\n" >> $CONFFILE
printf "OWNER=$OWNER\n" >> $CONFFILE

$MAKE $MAKEOPTS

